ClassPathXmlApplicationContext--ClassPathXmlApplicationContext:refresh
	AbstractApplicationContext--refresh:obtainFreshBeanFactory
									obtainFreshBeanFactory:refreshBeanFactory
		AbstractRefreshableApplicationContext--refreshBeanFactory:loadBeanDefinitions
			AbstractXmlApplicationContext--loadBeanDefinitions:loadBeanDefinitions
											loadBeanDefinitions:reader.loadBeanDefinitions
				AbstractBeanDefinitionReader--loadBeanDefinitions:loadBeanDefinitions
					XmlBeanDefinitionReader--loadBeanDefinitions:doLoadBeanDefinitions
												doLoadBeanDefinitions:doLoadDocument、registerBeanDefinitions
													registerBeanDefinitions:doRegisterBeanDefinitions
						DefaultBeanDefinitionDocumentReader--doRegisterBeanDefinitions:parseBeanDefinitions
																parseBeanDefinitions:parseDefaultElement
																	parseDefaultElement:processBeanDefinition
																		processBeanDefinition:BeanDefinitionHolder bdHolder = delegate.parseBeanDefinitionElement(ele);
																			BeanDefinitionParserDelegate--parseBeanDefinitionElement:createBeanDefinition、parseBeanDefinitionAttributes、parseConstructorArgElements、parsePropertyElements、parseQualifierElements
																		processBeanDefinition:BeanDefinitionReaderUtils.registerBeanDefinition
							BeanDefinitionReaderUtils--registry.registerBeanDefinition
								DefaultListableBeanFactory:registerBeanDefinition
																parseBeanDefinitions:parseCustomElement
	AbstractApplicationContext--refresh:finishBeanFactoryInitialization
									finishBeanFactoryInitialization:beanFactory.preInstantiateSingletons()
		DefaultListableBeanFactory--preInstantiateSingletons:getBean
			AbstractBeanFactory--getBean:doGetBean
									doGetBean:this.getSingleton
				DefaultSingletonBeanRegistry--getSingleton(三级缓存，为了解决循环依赖)
									doGetBean:createBean
										AbstractAutowireCapableBeanFactory--createBean:doCreateBean
																				doCreateBean:createBeanInstance、populateBean(填充属性，DI)、initializeBean
																					populateBean:applyPropertyValues
																						applyPropertyValues:setPropertyValues
											AbstractPropertyAccessor--setPropertyValues:setPropertyValue
												AbstractNestablePropertyAccessor--setPropertyValue:processKeyedProperty(tokens不为空，设置集合类型属性)
																					setPropertyValue:processLocalProperty(tokens, pv)(tokens为空，设置非集合类型属性)
																						ph.setValue(使用JDK内省技术，对指定属性的setter方法的获取)
				
