：src/main/java和src/main/resources是同一个目录


注意：如果是取简单数量类型的参数，括号中的参数名称必须为value
例：

<!-- 自定义条件查询用户列表 -->

       <select id="findUserByUsername" parameterType="java.lang.String"

                     resultType="com.kkb.mybatis.po.User">

          select * from user where username like '%${value}%'

       </select>

如果参数类型是Collection的，括号中的参数名称必须是Collection；如果是List的，名称必须是list，如果是array的，名称必须是array
源码：
private Object wrapCollection(final Object object) {
    if (object instanceof Collection) {
        StrictMap<Object> map = new StrictMap<>();
        map.put("collection", object);
        if (object instanceof List) {
            map.put("list", object);
        }
        return map;
    } else if (object != null && object.getClass().isArray()) {
        StrictMap<Object> map = new StrictMap<>();
        map.put("array", object);
        return map;
    }
    return object;
}

#{}和${}区别
区别1：

     #{}：相当于JDBC SQL语句中的占位符? (PreparedStatement)
     ${}：相当于JDBC SQL语句中的连接符合 + (Statement)
区别2：
     #{}：进行输入映射的时候，会对参数进行类型解析（如果是String类型，那么SQL语句会自动加上’’）
     ${}：进行输入映射的时候，将参数原样输出到SQL语句中
区别3：  

     #{}：如果进行简单类型（String、Date、8种基本类型的包装类）的输入映射时，#{}中参数名称可以任意

    ${}：如果进行简单类型（String、Date、8种基本类型的包装类）的输入映射时，${}中参数名称必须是value

区别4：

     ${} :存在SQL注入问题 ，使用OR 1=1 关键字将查询条件忽略


Mybatis开发方式

1.原始dao开发方式

@Before

 publicvoid init() throws Exception {

       SqlSessionFactoryBuilder sessionFactoryBuilder = new SqlSessionFactoryBuilder();

        InputStream inputStream = Resources.getResourceAsStream("SqlMapConfig.xml");

        sqlSessionFactory = sessionFactoryBuilder.build(inputStream);

 }

 @Test

 publicvoid testFindUserById() {

       UserDao userDao = new UserDaoImpl(sqlSessionFactory);

       User user = userDao.findUserById(22);

       System.out.println(user);

 } 

2.mapper代理开发方式（JDK的代理方式）

    2.1 代理

        动态代理分为两种方式：

                基于JDK的动态代理--针对有接口的类进行动态代理 ************

                基于CGLIB的动态代理--通过子类继承父类的方式去进行代理。

    2.2 XML方式

         只需要开发Mapper接口（dao接口）和Mapper约束文件，不需要编写实现类

        Mapper接口开发需要遵循以下规范：

         1、  Mapper接口的类路径与Mapper.xml文件中的namespace相同。

         2、  Mapper接口方法名称和Mapper.xml中定义的每个statement的id相同。

         3、  Mapper接口方法的输入参数类型和mapper.xml中定义的每个sql 的parameterType的类型相同。

         4、  Mapper接口方法的返回值类型和mapper.xml中定义的每个sql的resultType的类型相同。

3. 注解方式

     @Insert:实现新增

     @Update:实现更新

     @Delete:实现删除

     @Select:实现查询

     @Result:实现结果集封装

             代替了 <id>标签和<result>标签

             @Result 中 属性介绍：column 数据库的列名，Property 需要装配的属性名，one 需要使用的@One 注解（@Result（one=@One）（））），many需要使用的@Many 注解（@Result（many=@many）（）））

     @Results:可以与@Result 一起使用，封装多个结果集

             代替的是标签<resultMap>，该注解中可以使用单个@Result 注解，也可以使用@Result 集合，@Results（{@Result（），@Result（）}）或@Results（@Result（））

     @One:实现一对一结果集封装

     @Many:实现一对多结果集封装

     @SelectProvider: 实现动态 SQL 映射


生命周期（作用范围）

    sqlsession：方法级别
    sqlsessionFactory：全局范围（应用级别）
    sqlsessionFactoryBuilder：方法级别


全局配置文件
     typeAlias标签
         别名的作用：就是为了简化映射文件中parameterType和ResultType中的POJO类型名称编写
          1.默认支持别名

          2.自定义别名

在SqlMapConfig.xml中进行如下配置：

<typeAliases>

       <!-- 单个别名定义 -->

       <typeAlias alias="user" type="com.kkb.mybatis.po.User"/>

       <!-- 批量别名定义，扫描整个包下的类，别名为类名（首字母大写或小写都可以） -->

       <package name="com.kkb.mybatis.po"/>

</typeAliases>
     mappers标签

          1.<mapper resource=""/>

                 使用相对于类路径的资源

                 如：<mapper resource="sqlmap/User.xml" />

          2.<mapper url="">

              使用绝对路径加载资源

              如：<mapper url="file://d:/sqlmap/User.xml" />

          3.<mapper class=""/>

              使用mapper接口类路径，加载映射文件

              如：<mapper class="com.kkb.mybatis.mapper.UserMapper"/>

           注意：此种方法要求mapper接口名称和mapper映射文件名称相同，且放在同一个目录中，且mapper映射文件namespace和mapper接口类路径名称相同

          4.<package name=""/>

              注册指定包下的所有mapper接口，来加载映射文件

              如：<package name="com.kkb.mybatis.mapper"/>

              注意：此种方法要求mapper接口名称和mapper映射文件名称相同，且放在同一个目录中
源码
![image](https://github.com/shmilysunny/java/blob/master/Mybatis/images/img1.png)
![Image](https://raw.githubusercontent.com/Gladysid/Images-blog/master/IE-box-pic.png)
