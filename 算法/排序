中文名称  英文名称    平均时间复杂度  最坏时间复杂度  最好时间复杂度  空间复杂度  稳定性
选择排序  selection  n²            n²            n²            1          不稳
冒泡排序  bubble     n²            n²            n             1          稳
插入排序  insertion  n²            n²            n             1          稳
堆排序    heop       nlog2n        nlog2n        nlog2n        1          不稳
希尔排序  shell      n13           n²            n             1          不稳
归并排序  merge      nlog2n        nlog2n        nlog2n        n          稳
快速排序  quick      nlog2n        n²            nlog2n        log2n      不稳
桶排序    buckel     n+k           n²            n             n+k        稳
计数排序  couting    n+k           n+k           n+k           n+k        稳
基数排序  radix      n*k           n*k           n*k           n+k        稳

选泡插
快归堆希统计基
恩方恩老恩一三
对恩加K恩乘K
不稳稳稳不稳稳
不稳不稳稳稳稳

选择排序
public static void main(String[] args) {
	int ary[] = new int[] {3, 7, 2, 8, 1};
	public static void main(String[] args) {
	int ary[] = new int[] {3, 7, 2, 8, 1};
	for (int i = 0; i < ary.length-1; i++) {
		int minPos = i;
		for (int j = i+1; j < ary.length; j++) {
			if (ary[minPos] > ary[j]) {
				minPos = j;
			}
			// (n-1)+(n-2)+(n-3)+...+1
		}
		setArray(i, minPos, ary);
	}
}
private static void setArray(int i, int minPos, int[] ary) {
	int tmp = ary[i];
	ary[i] = ary[minPos];
	ary[minPos] = tmp;
}

冒泡排序
public static void main(String[] args) {
    int[] ary = new int[] {9, 6, 1, 3, 5};
    for (int i = ary.length-1; i > 0; i--) {
        for (int j = 0; j < i; j++) {
            if (ary[j] > ary[j+1]) {
                int tmp = ary[j+1];
                ary[j+1] = ary[j];
                ary[j] = tmp;
            }
            // (n-1)+(n-2)+(n-3)+...+1
        }
    }
}
